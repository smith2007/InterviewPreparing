package array;

public class MergeSortedArray {


    public static void main(String[] args) {

        int[] arr1 = {1, 2, 3, 0, 0, 0};
        int[] arr2 = {2, 5, 6};

        merge(arr1, 3, arr2, 3);

        for (int i : arr1) {
            System.out.println(i);
        }
    }

    /**
     * здесь суть такая, значит дано два массва
     * первый с нулями на конце - 1, 2, 3, 0, 0, 0 - где кол-во элементов без нулей - m
     *                   второй - 2, 5, 6 - кол-во элементов n
     * берем ТРИ указателя ПЕРВЫЙ указатель на конец первого массива, где нули
     * остальные два указателя с КОНЦА массивов где без нулей m и n
     *
     * раскручиваем цикл вайл до тех пор пока один из указателей с конца не дойдет до нуля
     * и в каждой итерации проверяем какой из элементов больше в первом массиве или же во втором массиве?
     * ну и что делаем как только поняли какой элементо блольше?
     *
     * записываем вместо нуля этот элемент и двигаем тот или иной хвост
     *
     */

    static void merge(int[] arr1, int m, int[] arr2, int n) {

        int tail1 = m - 1;
        int tail2 = n - 1;
        int finalSize = m + n - 1;

        //пока не достигнем конца того или иного массива
        while (tail1 >= 0 && tail2 >= 0) {

            if (arr1[tail1] > arr2[tail2]) {
                arr1[finalSize] = arr1[tail1];
                tail1--;
            } else {
                arr1[finalSize] = arr2[tail2];
                tail2--;
            }

            // указатель на конец двигаем в любом случае, потому что мержим
            finalSize--;

        }

        // тут надо не забыть одну очень важную вещь - домержить второй массив
        //если вдруг мы выпали из первого цикла потому что достигли конца первого массива
        while (tail2 >= 0) {
            arr1[finalSize] = arr2[tail2];
            finalSize--;
            tail2--;
        }
    }
}
