package greedy;

public class MaximumSubarray {

    public static void main(String[] args) {
        int[] arr = {-1};
        System.out.println(find(arr));
    }

    /**
     * Дан массив чисел  [-2,1,-3,4,-1,2,1,-5,4], необходимо найти такой подмассив,
     * который дает наибольшую сумму, и вывести эту сумму
     * <p>
     * [4,-1,2,1] этот подмассив имеет наибольшую сумму = 6.
     * по факту тебе надо умно считать сумму элементов массива,
     * что может негативно сказаться на твоей сумме??
     * правильно только отрицательные элементы,

     тут все очень и очень просто, решается типичным жадным подходом
     берем все что не негативно сказывается на нашей подсумме

     каждую итерацию считаем подсумму, если она не уменьшается(т.е не встретили отриц элемент)
     апдейтим нашу глобальную сумму

     все
     */
    static int find(int[] arr) {

        int currSum = arr[0];
        int maxSum = arr[0];

        for (int i = 1; i < arr.length; i++) {
            currSum = Math.max(arr[i], currSum + arr[i]);
            maxSum = Math.max(maxSum, currSum);
        }
        return maxSum;
    }
}
